<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>加肥猫的学习博客</title>
  
  <subtitle>记录学习和生活中的点点滴滴</subtitle>
  <link href="https://helloliuxinjie.github.io/myblog.github.io/atom.xml" rel="self"/>
  
  <link href="https://helloliuxinjie.github.io/myblog.github.io/"/>
  <updated>2021-03-24T04:05:54.161Z</updated>
  <id>https://helloliuxinjie.github.io/myblog.github.io/</id>
  
  <author>
    <name>加菲猫的薛定谔@LXJ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://helloliuxinjie.github.io/myblog.github.io/2021/03/24/Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>https://helloliuxinjie.github.io/myblog.github.io/2021/03/24/Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2021-03-24T04:04:27.016Z</published>
    <updated>2021-03-24T04:05:54.161Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Lambda表达式"><a href="#Lambda表达式" class="headerlink" title="Lambda表达式"></a>Lambda表达式</h1><h2 id="一、Lambda表达式简介"><a href="#一、Lambda表达式简介" class="headerlink" title="一、Lambda表达式简介"></a>一、Lambda表达式简介</h2><h3 id="什么是Lambda？"><a href="#什么是Lambda？" class="headerlink" title="什么是Lambda？"></a>什么是Lambda？</h3><p>Lambda是JAVA 8添加的新特性，说白了，Lambda是一个匿名函数</p><h3 id="为什么使用Lambda"><a href="#为什么使用Lambda" class="headerlink" title="为什么使用Lambda"></a>为什么使用Lambda</h3><p>使用Lambda表达式可以对一个接口的方法进行非常简洁的实现</p><h3 id="Lambda对接口的要求"><a href="#Lambda对接口的要求" class="headerlink" title="Lambda对接口的要求"></a>Lambda对接口的要求</h3><p>虽然可以使用Lambda表达式对某些接口进行简单的实现，但是并不是所有的接口都可以用Lambda表达式来实现，要求接口中定义的<strong>必须要实现的抽象方法只能是一个</strong></p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在JAVA8中 ，对接口加了一个新特性：<span class="keyword">default</span></span><br><span class="line">可以使用<span class="keyword">default</span>对接口方法进行修饰，被修饰的方法在接口中可以默认实现</span><br></pre></td></tr></table></figure><h3 id="FunctionalInterface"><a href="#FunctionalInterface" class="headerlink" title="@FunctionalInterface"></a>@FunctionalInterface</h3><p>修饰函数式接口的，接口中的抽象方法只有一个</p><h2 id="二、Lambda的基础语法"><a href="#二、Lambda的基础语法" class="headerlink" title="二、Lambda的基础语法"></a>二、Lambda的基础语法</h2><h3 id="1-语法"><a href="#1-语法" class="headerlink" title="1.语法"></a>1.语法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.Lambda表达式的基础语法</span></span><br><span class="line"><span class="comment">// Lambda是一个匿名函数 一般关注的是以下两个重点</span></span><br><span class="line"><span class="comment">// 参数列表 方法体</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* （）：用来描述参数列表</span></span><br><span class="line"><span class="comment">*  &#123;&#125;：用来描述方法体 有时可以省略</span></span><br><span class="line"><span class="comment">*  -&gt;: Lambda运算符 读作goes to</span></span><br><span class="line"><span class="comment">*  例 Test t=()-&gt;&#123;System.out.println(&quot;hello word&quot;)&#125;; 大括号可省略</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="2-创建多个接口"><a href="#2-创建多个接口" class="headerlink" title="2.创建多个接口"></a>2.创建多个接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 无参数无返回值接口</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Alan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-05-27 10:24</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">LambdaNoneReturnNoneParmeter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 无返回值有单个参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Alan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-05-27 10:26</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">LambdaNoneReturnSingleParmeter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span> n)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 无返回值 多个参数的接口</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Alan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-05-27 10:27</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">LambdaNoneReturnMutipleParmeter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 有返回值 无参数接口</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Alan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-05-27 10:28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">LambdaSingleReturnNoneParmeter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">test</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 有返回值 有单个参数的接口</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Alan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-05-27 10:29</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">LambdaSingleReturnSingleParmeter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span> n)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 有返回值 有多个参数的接口</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Alan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-05-27 10:30</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">LambdaSingleReturnMutipleParmeter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-创建测试类"><a href="#3-创建测试类" class="headerlink" title="3.创建测试类"></a>3.创建测试类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.alan.learn.syntax;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alan.learn.interfaces.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Alan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-05-27 10:33</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Syntax1</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 1.Lambda表达式的基础语法</span></span><br><span class="line">        <span class="comment">// Lambda是一个匿名函数 一般关注的是以下两个重点</span></span><br><span class="line">        <span class="comment">// 参数列表 方法体</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * （）：用来描述参数列表</span></span><br><span class="line"><span class="comment">         *  &#123;&#125;：用来描述方法体</span></span><br><span class="line"><span class="comment">         *  -&gt;: Lambda运算符 读作goes to</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 无参无返回  </span></span><br><span class="line">        LambdaNoneReturnNoneParmeter lambda1=()-&gt;&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;hello word&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        lambda1.test();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 无返回值 单个参数 </span></span><br><span class="line">        LambdaNoneReturnSingleParmeter lambda2=(<span class="keyword">int</span> n)-&gt;&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;参数是：&quot;</span>+n);</span><br><span class="line">        &#125;;</span><br><span class="line">        lambda2.test(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 无返回值 多个参数</span></span><br><span class="line">        LambdaNoneReturnMutipleParmeter lambda3=(<span class="keyword">int</span> a,<span class="keyword">int</span> b)-&gt;&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;参数和是：&quot;</span>+(a+b));</span><br><span class="line">        &#125;;</span><br><span class="line">        lambda3.test(<span class="number">10</span>,<span class="number">12</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 有返回值 无参数</span></span><br><span class="line">        LambdaSingleReturnNoneParmeter lambda4=()-&gt;&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;lambda4：&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">100</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">int</span> ret=lambda4.test();</span><br><span class="line">        System.out.println(<span class="string">&quot;返回值是：&quot;</span>+ret);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 有返回值 单个参数</span></span><br><span class="line">        LambdaSingleReturnSingleParmeter lambda5=(<span class="keyword">int</span> a)-&gt;&#123;</span><br><span class="line">            <span class="keyword">return</span> a*<span class="number">2</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">int</span> ret2= lambda5.test(<span class="number">3</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;单个参数，lambda5返回值是:&quot;</span>+ret2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//有返回值 多个参数</span></span><br><span class="line">        LambdaSingleReturnMutipleParmeter lambda6=(<span class="keyword">int</span> a,<span class="keyword">int</span> b)-&gt;&#123;</span><br><span class="line">            <span class="keyword">return</span> a+b;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">int</span> ret3=lambda6.test(<span class="number">12</span>,<span class="number">14</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;多个参数，lambda6返回值是：&quot;</span>+ret3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">    hello word</span><br><span class="line">参数是：<span class="number">10</span></span><br><span class="line">参数和是：<span class="number">22</span></span><br><span class="line">lambda4：</span><br><span class="line">返回值是：<span class="number">100</span></span><br><span class="line">单个参数，lambda5返回值是:<span class="number">6</span></span><br><span class="line">    多个参数，lambda6返回值是：<span class="number">26</span></span><br></pre></td></tr></table></figure><h2 id="三、语法精简"><a href="#三、语法精简" class="headerlink" title="三、语法精简"></a>三、语法精简</h2><p>针对上述基础语法的精简</p><h3 id="1-参数类型精简"><a href="#1-参数类型精简" class="headerlink" title="1.参数类型精简"></a>1.参数类型精简</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 语法精简</span></span><br><span class="line"><span class="comment">* 1.参数类型</span></span><br><span class="line"><span class="comment">* 由于在接口的抽象方法中，已经定义了参数的数量类型 所以在Lambda表达式中参数的类型可以省略</span></span><br><span class="line"><span class="comment">* 备注：如果需要省略类型，则每一个参数的类型都要省略，千万不要一个省略一个不省略</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">LambdaNoneReturnMutipleParmeter lambda1=(<span class="keyword">int</span> a,<span class="keyword">int</span> b)-&gt; &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;hello world&quot;</span>); </span><br><span class="line">&#125;;    </span><br><span class="line">可以精简为:</span><br><span class="line">LambdaNoneReturnMutipleParmeter lambda1=(a,b)-&gt; &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="2-参数小括号精简"><a href="#2-参数小括号精简" class="headerlink" title="2.参数小括号精简"></a>2.参数小括号精简</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 2.参数小括号</span></span><br><span class="line"><span class="comment">* 如果参数列表中，参数的数量只有一个 此时小括号可以省略</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">LambdaNoneReturnSingleParmeter lambda2=(a)-&gt;&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line">可以精简为:</span><br><span class="line">LambdaNoneReturnSingleParmeter lambda2= a-&gt;&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="3-方法大括号精简"><a href="#3-方法大括号精简" class="headerlink" title="3.方法大括号精简"></a>3.方法大括号精简</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 3.方法大括号</span></span><br><span class="line"><span class="comment">* 如果方法体中只有一条语句，此时大括号可以省略</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">LambdaNoneReturnSingleParmeter lambda3=a-&gt;&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line">可以精简为:</span><br><span class="line">LambdaNoneReturnSingleParmeter lambda3=a-&gt;System.out.println(<span class="string">&quot;hello world&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="4-大括号精简补充"><a href="#4-大括号精简补充" class="headerlink" title="4.大括号精简补充"></a>4.大括号精简补充</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 4.如果方法体中唯一的一条语句是一个返回语句</span></span><br><span class="line"><span class="comment">* 贼省略大括号的同时 也必须省略return</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">LambdaSingleReturnNoneParmeter lambda4=()-&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">10</span>;</span><br><span class="line">&#125;;</span><br><span class="line">可以精简为:</span><br><span class="line">LambdaSingleReturnNoneParmeter lambda4=()-&gt;<span class="number">10</span>;</span><br></pre></td></tr></table></figure><h3 id="5-多参数，有返回值-精简"><a href="#5-多参数，有返回值-精简" class="headerlink" title="5.多参数，有返回值 精简"></a>5.多参数，有返回值 精简</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">LambdaSingleReturnNoneParmeter lambda4=(a,b)-&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;;</span><br><span class="line">可以精简为:</span><br><span class="line">LambdaSingleReturnMutipleParmeter lambda5=(a,b)-&gt;a+b;</span><br></pre></td></tr></table></figure><h2 id="四、Lambda语法进阶"><a href="#四、Lambda语法进阶" class="headerlink" title="四、Lambda语法进阶"></a>四、Lambda语法进阶</h2><h3 id="1-方法引用-普通方法与静态方法"><a href="#1-方法引用-普通方法与静态方法" class="headerlink" title="1.方法引用(普通方法与静态方法)"></a>1.方法引用(普通方法与静态方法)</h3><p>在实际应用过程中，一个接口在很多地方都会调用同一个实现，例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LambdaSingleReturnMutipleParmeter lambda1=(a,b)-&gt;a+b;</span><br><span class="line">LambdaSingleReturnMutipleParmeter lambda2=(a,b)-&gt;a+b;</span><br></pre></td></tr></table></figure><p>这样一来每次都要写上具体的实现方法 a+b，如果需求变更，则每一处实现都需要更改，基于这种情况，可以将后续的是实现更改为已定义的 方法，需要时直接调用就行</p><h4 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*方法引用：</span></span><br><span class="line"><span class="comment">* 可以快速的将一个Lambda表达式的实现指向一个已经实现的方法</span></span><br><span class="line"><span class="comment">* 方法的隶属者 如果是静态方法 隶属的就是一个类  其他的话就是隶属对象</span></span><br><span class="line"><span class="comment">* 语法：方法的隶属者::方法名</span></span><br><span class="line"><span class="comment">* 注意：</span></span><br><span class="line"><span class="comment">*  1.引用的方法中，参数数量和类型一定要和接口中定义的方法一致</span></span><br><span class="line"><span class="comment">*  2.返回值的类型也一定要和接口中的方法一致</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h4 id="例："><a href="#例：" class="headerlink" title="例："></a>例：</h4><ul><li>```java<br>package com.alan.learn.syntax;import com.alan.learn.interfaces.LambdaSingleReturnSingleParmeter;/**<ul><li><p>@author Alan</p></li><li><p>@version 1.0</p></li><li><p>@date 2020-05-27 11:48</p></li><li><p>/<br>public class Syntax3 {</p><p>  public static void main(String[] args) {</p><pre><code>  LambdaSingleReturnSingleParmeter lambda1=a-&gt;a*2;  LambdaSingleReturnSingleParmeter lambda2=a-&gt;a*2;  LambdaSingleReturnSingleParmeter lambda3=a-&gt;a*2;  //简化  LambdaSingleReturnSingleParmeter lambda4=a-&gt;change(a);  //方法引用  LambdaSingleReturnSingleParmeter lambda5=Syntax3::change;</code></pre><p>  }</p><p>  /**</p><ul><li>自定义的实现方法</li><li>/<br>private static int change(int a){<br>   return a*2;<br>}<br>}</li></ul></li></ul><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### <span class="number">2.</span>方法引用(构造方法) ###</span><br><span class="line"></span><br><span class="line">目前有一个实体类</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">String</span> name;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">&quot;Person的无参构造方法执行&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(<span class="keyword">String</span> name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">&quot;Person的有参构造方法执行&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>需求</p><p>两个接口，各有一个方法，一个接口的方法需要引用Person的无参构造，一个接口的方法需要引用Person的有参构造 用于返回两个Person对象，例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">PersonCreater</span></span>&#123;</span><br><span class="line">    <span class="comment">//通过Person的无参构造实现</span></span><br><span class="line">    <span class="function">Person <span class="title">getPerson</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">PersonCreater2</span></span>&#123;</span><br><span class="line">    <span class="comment">//通过Person的有参构造实现</span></span><br><span class="line">    <span class="function">Person <span class="title">getPerson</span><span class="params">(String name,<span class="keyword">int</span> age)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么可以写作：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Syntax4</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        PersonCreater creater=()-&gt;<span class="keyword">new</span> Person();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//引用的是Person的无参构造</span></span><br><span class="line">         <span class="comment">//PersonCreater接口的方法指向的是Person的方法</span></span><br><span class="line">        PersonCreater creater1=Person::<span class="keyword">new</span>; <span class="comment">//等价于上面的()-&gt;new Person()</span></span><br><span class="line">        <span class="comment">//实际调用的是Person的无参构造 相当于把接口里的getPerson()重写成new Person()。</span></span><br><span class="line">        Person a=creater1.getPerson(); </span><br><span class="line"></span><br><span class="line">        <span class="comment">//引用的是Person的有参构造</span></span><br><span class="line">        PersonCreater2 creater2=Person::<span class="keyword">new</span>;</span><br><span class="line">        Person b=creater2.getPerson(<span class="string">&quot;张三&quot;</span>,<span class="number">18</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：是引用无参构造还是引用有参构造 在于接口定义的方法参数</strong></p><h2 id="五、综合练习"><a href="#五、综合练习" class="headerlink" title="五、综合练习"></a>五、综合练习</h2><h3 id="1-集合排序案例"><a href="#1-集合排序案例" class="headerlink" title="1.集合排序案例"></a>1.集合排序案例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.alan.exercise;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alan.learn.data.Person;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 集合排序案例</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Alan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-05-27 15:08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Exercise1</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//需求：已知在一个ArrayList中有若干各Person对象，将这些Person对象按照年龄进行降序排列</span></span><br><span class="line">        ArrayList&lt;Person&gt; list=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        list.add(<span class="keyword">new</span> Person(<span class="string">&quot;张三&quot;</span>,<span class="number">10</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> Person(<span class="string">&quot;李四&quot;</span>,<span class="number">12</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> Person(<span class="string">&quot;王五&quot;</span>,<span class="number">13</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> Person(<span class="string">&quot;赵六&quot;</span>,<span class="number">14</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> Person(<span class="string">&quot;李雷&quot;</span>,<span class="number">11</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> Person(<span class="string">&quot;韩梅梅&quot;</span>,<span class="number">8</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> Person(<span class="string">&quot;jack&quot;</span>,<span class="number">10</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;排序前：&quot;</span>+list);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将排列的依据传入 具体的方法指向的是 内部元素的age相减 sort会依据结果的正负进行降序排列</span></span><br><span class="line">        <span class="comment">//sort 使用提供的 Comparator对此列表进行排序以比较元素。</span></span><br><span class="line">        list.sort((o1, o2) -&gt; o2.age-o1.age);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;排序后：&quot;</span>+list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-Treeset排序案例"><a href="#2-Treeset排序案例" class="headerlink" title="2.Treeset排序案例"></a>2.Treeset排序案例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.alan.exercise;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alan.learn.data.Person;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.TreeSet;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Alan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-05-27 15:37</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Exercise2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**Treeset 自带排序</span></span><br><span class="line"><span class="comment">         * 但是现在不知道Person谁大谁小无法排序</span></span><br><span class="line"><span class="comment">         * 解决方法：</span></span><br><span class="line"><span class="comment">         * 使用Lambda表达式实现Comparator接口，并实例化一个TreeSet对象</span></span><br><span class="line"><span class="comment">         * 注意：在TreeSet中如果Comparator返回值是 0 会判断这是两个元素是相同的 会进行去重</span></span><br><span class="line"><span class="comment">         * TreeSet&lt;Person&gt; set=new TreeSet&lt;&gt;((o1, o2) -&gt; o2.age-o1.age); </span></span><br><span class="line"><span class="comment">         * 这个获取的对象打印会少一个Person</span></span><br><span class="line"><span class="comment">         * 此时我们将方法修改</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        TreeSet&lt;Person&gt; set=<span class="keyword">new</span> TreeSet&lt;&gt;((o1, o2) -&gt;&#123;</span><br><span class="line">            <span class="keyword">if</span>(o1.age&gt;=o2.age)&#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        set.add(<span class="keyword">new</span> Person(<span class="string">&quot;张三&quot;</span>,<span class="number">10</span>));</span><br><span class="line">        set.add(<span class="keyword">new</span> Person(<span class="string">&quot;李四&quot;</span>,<span class="number">12</span>));</span><br><span class="line">        set.add(<span class="keyword">new</span> Person(<span class="string">&quot;王五&quot;</span>,<span class="number">13</span>));</span><br><span class="line">        set.add(<span class="keyword">new</span> Person(<span class="string">&quot;赵六&quot;</span>,<span class="number">14</span>));</span><br><span class="line">        set.add(<span class="keyword">new</span> Person(<span class="string">&quot;李雷&quot;</span>,<span class="number">11</span>));</span><br><span class="line">        set.add(<span class="keyword">new</span> Person(<span class="string">&quot;韩梅梅&quot;</span>,<span class="number">8</span>));</span><br><span class="line">        set.add(<span class="keyword">new</span> Person(<span class="string">&quot;jack&quot;</span>,<span class="number">10</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(set);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-集合的遍历"><a href="#3-集合的遍历" class="headerlink" title="3.集合的遍历"></a>3.集合的遍历</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.alan.exercise;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 集合的遍历</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Alan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-05-27 15:52</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Exercise3</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;Integer&gt; list=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        Collections.addAll(list,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * list.forEach(Consumer&lt;? super E&gt; action) </span></span><br><span class="line"><span class="comment">         * api文档解释： 对 集合中的每个元素执行给定的操作，直到所有元素都被处理或动作引发异常。</span></span><br><span class="line"><span class="comment">         * 将集合中的每一个元素都带入到接口Consumer的方法accept中  然后方法accept指向我们的引用</span></span><br><span class="line"><span class="comment">         * 输出集合中的所有元素</span></span><br><span class="line"><span class="comment">         * list.forEach(System.out::println);</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出集合中所有的偶数</span></span><br><span class="line">        list.forEach(ele-&gt;&#123;</span><br><span class="line">            <span class="keyword">if</span>(ele%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println(ele);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-删除集合中满足条件的元素"><a href="#4-删除集合中满足条件的元素" class="headerlink" title="4.删除集合中满足条件的元素"></a>4.删除集合中满足条件的元素</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.alan.exercise;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alan.learn.data.Person;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除集合中满足条件的元素</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Alan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-05-27 16:05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Exercise4</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;Person&gt; list=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        list.add(<span class="keyword">new</span> Person(<span class="string">&quot;张三&quot;</span>,<span class="number">10</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> Person(<span class="string">&quot;李四&quot;</span>,<span class="number">12</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> Person(<span class="string">&quot;王五&quot;</span>,<span class="number">13</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> Person(<span class="string">&quot;赵六&quot;</span>,<span class="number">14</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> Person(<span class="string">&quot;李雷&quot;</span>,<span class="number">11</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> Person(<span class="string">&quot;韩梅梅&quot;</span>,<span class="number">8</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> Person(<span class="string">&quot;jack&quot;</span>,<span class="number">10</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//删除集合中年龄大于12的元素</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 之前迭代器的做法</span></span><br><span class="line"><span class="comment">         * ListIterator&lt;Person&gt; it = list.listIterator();</span></span><br><span class="line"><span class="comment">         * while (it.hasNext())&#123;</span></span><br><span class="line"><span class="comment">         *   Person ele=it.next();</span></span><br><span class="line"><span class="comment">         *   if(ele.age&gt;12)&#123;</span></span><br><span class="line"><span class="comment">         *         it.remove();</span></span><br><span class="line"><span class="comment">         *   &#125;</span></span><br><span class="line"><span class="comment">         * &#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * lambda实现</span></span><br><span class="line"><span class="comment">         * 逻辑</span></span><br><span class="line"><span class="comment">         * 将集合中的每一个元素都带入到接口Predicate的test方法中，</span></span><br><span class="line"><span class="comment">         * 如果返回值是true，则删除这个元素</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        list.removeIf(ele-&gt;ele.age&gt;<span class="number">10</span>);</span><br><span class="line">        System.out.println(list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-开辟一条线程-做一个数字的输出"><a href="#5-开辟一条线程-做一个数字的输出" class="headerlink" title="5.开辟一条线程 做一个数字的输出"></a>5.开辟一条线程 做一个数字的输出</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.alan.exercise;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 需求：</span></span><br><span class="line"><span class="comment"> * 开辟一条线程 做一个数字的输出</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Alan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-05-27 16:17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Exercise5</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 通过Runnable 来实例化线程</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        Thread t=<span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line">                System.out.println(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        t.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="六、系统内置的函数式接口"><a href="#六、系统内置的函数式接口" class="headerlink" title="六、系统内置的函数式接口"></a>六、系统内置的函数式接口</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.alan.functional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.function.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 系统内置的一些函数式接口</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Alan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-05-27 16:23</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FunctionalInterface</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Predicate&lt;T&gt;              ：     参数是T 返回值boolean  </span></span><br><span class="line">        <span class="comment">// 在后续如果一个接口需要指定类型的参数，返回boolean时可以指向 Predicate</span></span><br><span class="line">        <span class="comment">//          IntPredicate            int -&gt; boolean</span></span><br><span class="line">        <span class="comment">//          LongPredicate           long -&gt; boolean</span></span><br><span class="line">        <span class="comment">//          DoublePredicate         double -&gt; boolean</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Consumer&lt;T&gt;               :      参数是T 无返回值(void)</span></span><br><span class="line">        <span class="comment">//          IntConsumer             int -&gt;void</span></span><br><span class="line">        <span class="comment">//          LongConsumer            long -&gt;void</span></span><br><span class="line">        <span class="comment">//          DoubleConsumer          double -&gt;void</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Function&lt;T,R&gt;             :      参数类型T  返回值R</span></span><br><span class="line">        <span class="comment">//          IntFunction&lt;R&gt;          int -&gt; R</span></span><br><span class="line">        <span class="comment">//          LongFunction&lt;R&gt;         long -&gt; R</span></span><br><span class="line">        <span class="comment">//          DoubleFunction&lt;R&gt;       double -&gt; R</span></span><br><span class="line">        <span class="comment">//          IntToLongFunction       int -&gt; long</span></span><br><span class="line">        <span class="comment">//          IntToDoubleFunction     int -&gt; double</span></span><br><span class="line">        <span class="comment">//          LongToIntFunction       long -&gt; int</span></span><br><span class="line">        <span class="comment">//          LongToDoubleFunction    long -&gt; double</span></span><br><span class="line">        <span class="comment">//          DoubleToLongFunction    double -&gt; long</span></span><br><span class="line">        <span class="comment">//          DoubleToIntFunction     double -&gt; int</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Supplier&lt;T&gt; : 参数 无 返回值T</span></span><br><span class="line">        <span class="comment">// UnaryOperator&lt;T&gt; :参数T 返回值 T</span></span><br><span class="line">        <span class="comment">// BiFunction&lt;T,U,R&gt; : 参数 T、U 返回值 R</span></span><br><span class="line">        <span class="comment">// BinaryOperator&lt;T&gt; ：参数 T、T 返回值 T</span></span><br><span class="line">        <span class="comment">// BiPredicate&lt;T,U&gt; :  参数T、U  返回值 boolean</span></span><br><span class="line">        <span class="comment">// BiConsumer&lt;T,U&gt; :    参数T、U 无返回值</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 常用的 函数式接口</span></span><br><span class="line"><span class="comment">         * Predicate&lt;T&gt;、Consumer&lt;T&gt;、Function&lt;T,R&gt;、Supplier&lt;T&gt;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="七、Lambda闭包"><a href="#七、Lambda闭包" class="headerlink" title="七、Lambda闭包"></a>七、Lambda闭包</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.alan.closure;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.function.Supplier;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Alan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-05-27 16:59</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClosureDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * lambda的闭包会提升包围变量的生命周期</span></span><br><span class="line"><span class="comment">         * 所以局部变量 num在getNumber()方法内被 get()引用 不会在getNumber()方法执行后销毁</span></span><br><span class="line"><span class="comment">         * 这种方法可以在外部获取到某一个方法的局部变量</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">int</span> n=getNumber().get();</span><br><span class="line">        System.out.println(n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Supplier&lt;Integer&gt; <span class="title">getNumber</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> num=<span class="number">10</span>;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * Supplier supplier=()-&gt;num;</span></span><br><span class="line"><span class="comment">         * return supplier;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">return</span> ()-&gt;&#123;</span><br><span class="line">            <span class="keyword">return</span> num;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">*************************************************************************</span><br><span class="line">    </span><br><span class="line"><span class="keyword">package</span> com.alan.closure;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.function.Consumer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Alan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-05-27 17:20</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClosureDemo2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a=<span class="number">10</span>;</span><br><span class="line">        Consumer&lt;Integer&gt; c=ele-&gt;&#123;</span><br><span class="line">            System.out.println(a+<span class="number">1</span>);</span><br><span class="line">            <span class="comment">//System.out.println(ele);</span></span><br><span class="line">            <span class="comment">//System.out.println(a++); 会报错</span></span><br><span class="line">            <span class="comment">//在lambda中引用局部变量 这个变量必须是一个常量</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">//a++; 这样也会导致内部报错</span></span><br><span class="line">        <span class="comment">//如果在内部已经引用局部变量 参数传递后 打印的还是 10</span></span><br><span class="line">        c.accept(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Lambda表达式&quot;&gt;&lt;a href=&quot;#Lambda表达式&quot; class=&quot;headerlink&quot; title=&quot;Lambda表达式&quot;&gt;&lt;/a&gt;Lambda表达式&lt;/h1&gt;&lt;h2 id=&quot;一、Lambda表达式简介&quot;&gt;&lt;a href=&quot;#一、Lambda表达式简</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>变分自动编码器</title>
    <link href="https://helloliuxinjie.github.io/myblog.github.io/2021/03/20/VAE/"/>
    <id>https://helloliuxinjie.github.io/myblog.github.io/2021/03/20/VAE/</id>
    <published>2021-03-20T08:42:38.000Z</published>
    <updated>2021-03-20T08:27:34.810Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基于VAE的Mnist手写体图像生成笔记"><a href="#基于VAE的Mnist手写体图像生成笔记" class="headerlink" title="基于VAE的Mnist手写体图像生成笔记"></a>基于VAE的Mnist手写体图像生成笔记</h1><h2 id="1-判别模型与生成模型"><a href="#1-判别模型与生成模型" class="headerlink" title="1.判别模型与生成模型"></a>1.判别模型与生成模型</h2><p>在传统机器学习模型一般分为两类</p><h3 id="1-1-判别模型"><a href="#1-1-判别模型" class="headerlink" title="1.1 判别模型"></a>1.1 判别模型</h3><p>给定数据x, 比如一张图像.  标签y, 比如猫或者狗.   判别模型只在建模给定x后,对标签y的条件概率分布.  根据条件概率大小进行分类. 它可以用于各种分类任务.</p><p>判别任务具有更为直接和广泛的应用.</p><h3 id="1-2-生成模型"><a href="#1-2-生成模型" class="headerlink" title="1.2 生成模型"></a>1.2 生成模型</h3><p>通常假设数据x的产生, 服从一个有隐变量z控制的一个隐藏生成过程.  进而去建模数据x与隐变量z的联合概率分布.  从而根据z的先验分布p(z)–&gt;以及给定z后x的生成分布p(x|z), 对x进行采样, 生成新的数据样本.</p><p>生成模型更具趣味性, 因为他可以生成之前并不存在的样本. 它可以揭示数据背后的隐藏结构,从而展现机器的一个想象力, 拓宽人类的视野.</p><h2 id="2-基于深度学习的生成模型"><a href="#2-基于深度学习的生成模型" class="headerlink" title="2. 基于深度学习的生成模型"></a>2. 基于深度学习的生成模型</h2><p>随着深度学习的发展, 深度生成模型成为了当下的热点. 如今主流的生成模型主要分为两类: 生成对抗网络(GAN)和变分自编码器(VAE)</p><h3 id="2-1-生成对抗网络-GAN"><a href="#2-1-生成对抗网络-GAN" class="headerlink" title="2.1 生成对抗网络(GAN)"></a>2.1 生成对抗网络(GAN)</h3><p>生成网络与判别网络最小-最大化博弈, 从而在迭代的过程中, 生成网络可以骗过判别网络, 生成高质量的原始数据.   由于GAN基于博弈论的数学原理极为有趣, 它吸引了大量的研究.  由于它只能从隐变量的先验分布p(z)中随机采样生成新样本.  而不能表达给定x之后, 隐变量z的后验概率分布, 因此在应用中具有局限性.</p><h3 id="2-2-变分自编码器-VAE"><a href="#2-2-变分自编码器-VAE" class="headerlink" title="2.2 变分自编码器(VAE)"></a>2.2 变分自编码器(VAE)</h3><p>利用解码网络自下而上建模生成过程, 也就是给定z后, x的条件概率分布p(x|z)</p><p>利用编码网络自下而上的推理过程, 即给定x后的, z的后验概率</p><p>因此VAE的语义空间具有更加明显的语义结构, 它同时具有生成和推理的过程.  因此VAE在多项任务,比如说计算机视觉, 自然语言处理, 推荐系统方面具有广泛的应用.</p><h2 id="3-变分自编码器-VAE"><a href="#3-变分自编码器-VAE" class="headerlink" title="3.变分自编码器(VAE)"></a>3.变分自编码器(VAE)</h2><h3 id="3-1-生成过程-给定某一个z-利用其生成数据x"><a href="#3-1-生成过程-给定某一个z-利用其生成数据x" class="headerlink" title="3.1 生成过程(给定某一个z, 利用其生成数据x)"></a>3.1 生成过程(给定某一个z, 利用其生成数据x)</h3><p>假设隐变量z的先验p(z), 在没有给定任何数据的时候, 服从一个标准的正态分布.   现在假定给定z后, x服从条件概率分布p(x|z), 即可以由一个深度神经网络解码器(一个DNN)来表示, 该网络以theta作为其可训练权重, 以z作为输入.          当x是连续的实变量时, 我们可以假设它服从高斯分布, 从而将网络未加任何激活函数的原始输出作为高斯分布的均值.         当x是一个离散变量的时候, 我们可以假设它服从二元或者多元伯努利分布, 这时对网络的输出进行sigmoid或者softmax函数进行归一化, 可以作为该分布对应类别的概率.</p><h3 id="3-2推理过程-即给定某一个x-z的后验概率分布"><a href="#3-2推理过程-即给定某一个x-z的后验概率分布" class="headerlink" title="3.2推理过程(即给定某一个x, z的后验概率分布)"></a>3.2推理过程(即给定某一个x, z的后验概率分布)</h3><p>在给定上述隐变量z的先验概率p(z)以及数据x的生成概率p(x|z)之后, 给定一个样本x,对齐隐变量的推理P(z|x), 需要知道z的后验概率分布p(z|x),  而根据贝叶斯定理, 计算z的后验概率分布需要 x的边缘概率p(x)即归一化常数.    但是p(x)=fp(z)p(x|z)dz中的生成条件概率p(x|z)是由深度神经网络表示的, 是非线性的, 没有显式解, 因此, 该后验概率不可解!</p><h3 id="3-3-变分近似后验"><a href="#3-3-变分近似后验" class="headerlink" title="3.3 变分近似后验"></a>3.3 变分近似后验</h3><p>为了解决上述后验概率不可解的问题.  VAE假设存在一个q(z|x), 这里的权重参数为Ψ, 即编码器网络, 去近似不可解的后验.   VAE旨在从q(Ψ)中找到一个与上面的真实但不可解的后验概率分布p(这里参数为θ)的KL散度最小的一个分布, 作为它的一个近似.</p><h3 id="3-4-优化目标-最小化qΨ-z-x-与pθ-z-x-之间的KL散度"><a href="#3-4-优化目标-最小化qΨ-z-x-与pθ-z-x-之间的KL散度" class="headerlink" title="3.4 优化目标: 最小化qΨ(z|x)与pθ(z|x)之间的KL散度"></a>3.4 优化目标: 最小化qΨ(z|x)与pθ(z|x)之间的KL散度</h3><p>根据式1, 由于x的边缘分布p(x)中不含有隐变量z, 所以它是一个常数, 显然它不可解.    最小化KL散度等价于最大化后面这个式子L即式2, 因为KL散度是大于0的量, 所以L属于边缘分布对数的一个下界</p><p>根据式2即L表达式,  它由两个项组成, 其一是生成x概率的对数似然的期望,对其进行最大化,可以使得z能解释出现的数据x,从而约束隐空间的语义结构       其二是z的先验概率分布p(z)与z的后验概率分布的KL散度, 该项使得后验尽可能的去接近先验, 它作为正则化项控制编码器模型的复杂度.</p><h3 id="3-5-本文使用的网络结构"><a href="#3-5-本文使用的网络结构" class="headerlink" title="3.5 本文使用的网络结构"></a>3.5 本文使用的网络结构</h3><p>x是图像,  因此编码器网络首先采用卷积神经网络对图像进行特征提取, 同时在卷积层之间采用p归一化, 防止发生均值漂移,并且减轻过拟合的影响.  最后我们将后一个卷积层输出的特征图谱展开为一维,经过一个全连接层后, 分别用两个全连接层去预测隐变量的均值和方差.  为了使梯度能够正常的传递,VAE采用了重参数化技巧(即给定隐变量z的均值和标准差,我们首先从标准正态分布采到一个样本 ε,然后z=μ+σ*ε 作为z的样本进行前向传播).        在解码器中, 给定隐变量z的一个样本之后,通过全连接层将它映射到编码器最后一个卷积层输出特征图谱, 展开成为一维后的大小, 并将其reshape, 使其具有对应的空间维度, 接着解码器采用了一个解卷积层, 将特征图谱的空间分辨率提升到原来的大小. 最后解码器采用了以sigmoid为激活函数的卷积层还原得到原始数据x’</p><h1 id="VAE-另一项目"><a href="#VAE-另一项目" class="headerlink" title="VAE 另一项目"></a>VAE 另一项目</h1><p><a href="https://kexue.fm/archives/5253">gitee</a></p><p><a href="https://gitee.com/cao_yu_fei/vae_keras?_from=gitee_search#https://kexue.fm/archives/5253">vae_keras</a></p><h1 id="VAE-基于pytorch的项目"><a href="#VAE-基于pytorch的项目" class="headerlink" title="VAE 基于pytorch的项目"></a>VAE 基于pytorch的项目</h1><p><a href="https://gitee.com/xubinlee/VAE-CVAE-MNIST?_from=gitee_search">VAE-CVAE-MNIST</a></p><p><a href="https://gitee.com/piglittle/multi-level-vae?_from=gitee_search">multi-level-vae</a></p><p><a href="https://gitee.com/asdxyz1234/VAE?_from=gitee_search#https://github.com/AntixK/PyTorch-VAE/blob/master/models/vanilla_vae.py">有比较的全的vae源码</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;基于VAE的Mnist手写体图像生成笔记&quot;&gt;&lt;a href=&quot;#基于VAE的Mnist手写体图像生成笔记&quot; class=&quot;headerlink&quot; title=&quot;基于VAE的Mnist手写体图像生成笔记&quot;&gt;&lt;/a&gt;基于VAE的Mnist手写体图像生成笔记&lt;/h1&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>深度学习框架pytorch学习笔记</title>
    <link href="https://helloliuxinjie.github.io/myblog.github.io/2021/03/19/pytorch/"/>
    <id>https://helloliuxinjie.github.io/myblog.github.io/2021/03/19/pytorch/</id>
    <published>2021-03-19T13:02:38.000Z</published>
    <updated>2021-03-20T08:27:12.296Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Pytorch"><a href="#Pytorch" class="headerlink" title="Pytorch"></a>Pytorch</h1><h2 id="p1-人工神经网络与生物神经网络"><a href="#p1-人工神经网络与生物神经网络" class="headerlink" title="p1.人工神经网络与生物神经网络"></a>p1.人工神经网络与生物神经网络</h2><p>1.生物神经网络:数以万计的神经连接, 900亿的神经细胞组成了我们复杂的神经系统</p><p>2.记忆的形成: 生成了新的突触, 记忆就产生了.  但是形成的新连接怎么形成记忆仍然是科学界的一个迷.</p><p>3.人工神经网络: 比如Google的搜索引擎,股票价格预测,集成学习,家庭助手,围棋alphago</p><p>4.已经成体系的人工神经网络, 神经元之间的连接都是固定不可更换的. 也就是说在人工神经网络里没有凭空产生新连接这回事.  它靠的是正向和反向传播来更新神经元, 从而形成一个更好的神经系统. 本质上这是一个可以处理优化的数学模型. 而生物神经网络是信号刺激产生新的连接, 让信号能够通过新的连接形成反馈.</p><h2 id="p2-什么是神经网络"><a href="#p2-什么是神经网络" class="headerlink" title="p2.什么是神经网络"></a>p2.什么是神经网络</h2><p>1.能够在外界的信息的基础上改变内部的结构. 是一种自适应的过程.</p><p>2.神经网络是一种运算模型</p><h2 id="p3-神经网络-梯度下降"><a href="#p3-神经网络-梯度下降" class="headerlink" title="p3.神经网络:梯度下降"></a>p3.神经网络:梯度下降</h2><p>1.optimization优化问题: 它是人类历史上的重大突破, 它解决了很多生活中的问题</p><p>2.类别: Newton’s method      Least Squares method      Gradient Descent</p><h2 id="p4-神经网络的黑盒不黑-深度理解"><a href="#p4-神经网络的黑盒不黑-深度理解" class="headerlink" title="p4.神经网络的黑盒不黑(深度理解)"></a>p4.神经网络的黑盒不黑(深度理解)</h2><p>输入–&gt;加工–&gt;输出</p><p>加工的过程就是黑盒: 输入端,中间,输出端</p><p>每一层可以看成向量的线性变换或者非线性变换</p><p>黑盒加工处理: 将一种代表特征转换为另一种代表特征, 即一次次的特征转换, 一次次的更有深度的理解.   这里可以理解为把输入信息矩阵化,通过提取特征值或者做SVD之类的变换得到新的特征矩阵</p><p>称为黑盒的原因: 代表特征太多了, 人类无法看明白, 但是计算机可以看明白他们所学到的规律.</p><h2 id="p5-1-1-why使用pytorch"><a href="#p5-1-1-why使用pytorch" class="headerlink" title="p5 1.1 why使用pytorch"></a>p5 1.1 why使用pytorch</h2><p>pytorch是torch在python上衍生.  因为torch是一个使用Lua语言的神经网络库, torch很好用, 但是Lua又不是很流行,所以开发团队将Lua的Torch移植到更流行的语言python上.</p><p>pytorch是17年初才公开的模块.  tensorflow的一些概念静态图或者搭建流程图概念不是很理解.   但是使用pytorch更能诠释神经网络的工作流程, 性能和tensorflow差不多.</p><p>和tensorflow(静态模型)的区别: pytorch在搭建图的时候, 它不是先建好一个静态的流程图,然后在把数据放到流程图里面计算.   它是边输入数据边搭建图, 它是一个动态的过程.</p><h2 id="p6-1-2-安装"><a href="#p6-1-2-安装" class="headerlink" title="p6 1.2 安装"></a>p6 1.2 安装</h2><p>安装的时候安装了两个东西: 1.一个是pytorch的主模块  2.torchvision它是有一个数据库(图片), 有些训练好的网络</p><h2 id="p7-2-1-numpy和torch对比"><a href="#p7-2-1-numpy和torch对比" class="headerlink" title="p7 2.1 numpy和torch对比"></a>p7 2.1 numpy和torch对比</h2><p>numpy: 处理数据的模块, 处理矩阵, 使用你的多核来加速运算.  把array放在CPU中加速运算</p><p>Torch自称为神经网络界的Numpy, 因为它能将torch产生的tensor放在GPU中加速运算.</p><p>tensor是一个张量</p><h2 id="p8-2-2-variable变量"><a href="#p8-2-2-variable变量" class="headerlink" title="p8 2.2 variable变量"></a>p8 2.2 variable变量</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Pytorch&quot;&gt;&lt;a href=&quot;#Pytorch&quot; class=&quot;headerlink&quot; title=&quot;Pytorch&quot;&gt;&lt;/a&gt;Pytorch&lt;/h1&gt;&lt;h2 id=&quot;p1-人工神经网络与生物神经网络&quot;&gt;&lt;a href=&quot;#p1-人工神经网络与生物神经网络&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Android作业修改</title>
    <link href="https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/Android%E7%AC%AC%E4%B8%89%E4%BD%9C%E4%B8%9A%E4%BF%AE%E6%94%B9%E7%9A%84%E5%9C%B0%E6%96%B9/"/>
    <id>https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/Android%E7%AC%AC%E4%B8%89%E4%BD%9C%E4%B8%9A%E4%BF%AE%E6%94%B9%E7%9A%84%E5%9C%B0%E6%96%B9/</id>
    <published>2021-03-18T10:02:38.000Z</published>
    <updated>2021-03-23T05:31:20.463Z</updated>
    
    <content type="html"><![CDATA[<p> 参考链接:<br><strong>简单的网络请求工具的封装</strong></p><p><a href="https://blog.csdn.net/mu_ma_/article/details/106788500">https://blog.csdn.net/mu_ma_/article/details/106788500</a></p><p> <strong>了解JsonObject和JsonArray这两个类</strong></p><p>Json解析器大致逻辑是没有什么问题的,  就如果我要解析一种含有数组的Json数据，就可能不太行了, 类转换成Json数据也是，忽略了数组.   如果是考虑到添加格式不方便的话，可以考虑用JsonObject和JsonArray这两个类。</p><p>代码参考:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> reflection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.sf.json.JSONArray;</span><br><span class="line"><span class="keyword">import</span> net.sf.json.JSONObject;</span><br><span class="line"><span class="keyword">import</span> net.sf.json.JsonConfig;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *create by：sothoth</span></span><br><span class="line"><span class="comment"> *JsonUtil</span></span><br><span class="line"><span class="comment"> *2021.3.7</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JsonUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//存储八种基础数据类型和字符串类型</span></span><br><span class="line">    <span class="keyword">private</span>  Class baseElem[]=<span class="keyword">new</span> Class[]&#123;Byte.class,Short.class,Integer.class,Long.class,</span><br><span class="line">            Float.class, Double.class,Character.class,Boolean.class,String.class&#125;;</span><br><span class="line">    <span class="keyword">private</span>  Class baseType[]=<span class="keyword">new</span> Class[]&#123;Byte.TYPE,Short.TYPE,Integer.TYPE,Long.TYPE,</span><br><span class="line">            Float.TYPE, Double.TYPE,Character.TYPE,Boolean.TYPE,String.class&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将一个类转换成JSON数据</span></span><br><span class="line">    <span class="comment">//主要处理我们自己写的类</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">String <span class="title">beanToJson</span><span class="params">(T bean)</span> <span class="keyword">throws</span> NoSuchMethodException</span>&#123;</span><br><span class="line">        <span class="comment">//Json初始化</span></span><br><span class="line">         JSONObject json=<span class="keyword">new</span> JSONObject();</span><br><span class="line">         Class clazz=bean.getClass();</span><br><span class="line">         <span class="keyword">if</span>(isBaseElem(clazz) || bean <span class="keyword">instanceof</span> List || clazz.isArray())&#123;</span><br><span class="line">             <span class="keyword">return</span> beanToJson(<span class="string">&quot;bean&quot;</span>,bean);</span><br><span class="line">         &#125;</span><br><span class="line">         objectToJson(bean, json);</span><br><span class="line">         <span class="keyword">return</span> json.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将一个类转换成JSON数据</span></span><br><span class="line">    <span class="comment">//主要处理Integer、List子类等情况</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">String <span class="title">beanToJson</span><span class="params">(String beanName,T bean)</span> <span class="keyword">throws</span> NoSuchMethodException </span>&#123;</span><br><span class="line">        JSONObject json=<span class="keyword">new</span> JSONObject();</span><br><span class="line">        Class clazz=bean.getClass();</span><br><span class="line">        <span class="keyword">if</span>(isBaseElem(clazz))&#123;</span><br><span class="line">            json.accumulate(beanName,bean);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(bean <span class="keyword">instanceof</span> List || clazz.isArray())&#123;</span><br><span class="line">            listToJson(beanName,bean,json);</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            objectToJson(bean,json);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> json.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function"><span class="keyword">void</span> <span class="title">jsonToBean</span><span class="params">(T bean,String data)</span> <span class="keyword">throws</span> NoSuchMethodException </span>&#123;</span><br><span class="line">        JSONObject json=JSONObject.fromObject(data);</span><br><span class="line">        Class clazz=bean.getClass();</span><br><span class="line">        Set&lt;Map.Entry&gt; set=json.entrySet();</span><br><span class="line">        <span class="keyword">for</span>(Map.Entry m: set)&#123;</span><br><span class="line">            String fieldName=m.getKey().toString();</span><br><span class="line">            String methodName=<span class="string">&quot;set&quot;</span>+fieldName.substring(<span class="number">0</span>,<span class="number">1</span>).toUpperCase()</span><br><span class="line">                    +fieldName.substring(<span class="number">1</span>); <span class="comment">//获得方法名</span></span><br><span class="line">            Object o=m.getValue();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">int</span> index=-<span class="number">1</span>;</span><br><span class="line">                index=getBaseType(o.getClass());</span><br><span class="line">                <span class="keyword">if</span> (index!=-<span class="number">1</span>) &#123;</span><br><span class="line">                    System.out.println(methodName+<span class="string">&quot; &quot;</span>+o.getClass());</span><br><span class="line">                    Method method=clazz.getDeclaredMethod(methodName,baseType[index]);</span><br><span class="line">                    method.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                    method.invoke(bean,o);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (o <span class="keyword">instanceof</span> JSONObject) &#123;</span><br><span class="line">                    jsonToBean(o,((JSONObject) o).toString());</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (o <span class="keyword">instanceof</span> JSONArray) &#123;</span><br><span class="line">                    JSONArray jsonArray=JSONArray.fromObject(o);</span><br><span class="line">                    jsonToList(jsonArray.get(<span class="number">0</span>),jsonArray.toString());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        函数作用：将一个类转换成JSON数据格式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> &lt;T&gt; <span class="function"><span class="keyword">void</span> <span class="title">objectToJson</span><span class="params">(T t,JSONObject json)</span> <span class="keyword">throws</span> NoSuchMethodException</span>&#123;</span><br><span class="line">        Class&lt;?&gt; c = t.getClass();</span><br><span class="line">        Field[] fields = c.getDeclaredFields();</span><br><span class="line">        Method method;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            field.setAccessible(<span class="keyword">true</span>); <span class="comment">//私有属性</span></span><br><span class="line">            String fieldName=field.getName();</span><br><span class="line">            String methodName=<span class="string">&quot;get&quot;</span>+fieldName.substring(<span class="number">0</span>,<span class="number">1</span>).toUpperCase()</span><br><span class="line">                    +fieldName.substring(<span class="number">1</span>); <span class="comment">//获得方法名</span></span><br><span class="line">            method=c.getDeclaredMethod(methodName); <span class="comment">//得到方法</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                   通过方法反射得到属性，当然你也可以通过filed.get(t)来获得</span></span><br><span class="line"><span class="comment">                   为什么要获得属性呢？因为filed.getClass()得到的是Filed类，所以要获得属性</span></span><br><span class="line"><span class="comment">                   这里我只能想到通过Object进行下转，有更好想法可以进行额外尝试</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                method.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                Object elem=method.invoke(t);</span><br><span class="line">                <span class="keyword">if</span> (isBaseElem(elem.getClass())) &#123; <span class="comment">//如果这是基本类或字符串</span></span><br><span class="line">                    json.accumulate(fieldName,elem);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (elem <span class="keyword">instanceof</span> List || elem.getClass().isArray()) &#123; <span class="comment">//如果这是表或者数组</span></span><br><span class="line">                    listToJson(fieldName, elem, json);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="comment">/*</span></span><br><span class="line"><span class="comment">                         如果这是一个实体类，我们就进行递归调用。比如一个Classroom类中</span></span><br><span class="line"><span class="comment">                         有成员是Student类，我们就需要进一步解析Student类中的成员。</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line">                    objectToJson(elem,json);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span>  &lt;T&gt; <span class="function"><span class="keyword">void</span> <span class="title">listToJson</span><span class="params">(String paramName,T t,JSONObject json)</span></span>&#123;</span><br><span class="line">        JSONArray jsonArray=JSONArray.fromObject(t);</span><br><span class="line">        json.accumulate(paramName,jsonArray);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span>  &lt;T&gt; <span class="function">List <span class="title">jsonToList</span><span class="params">(T t,String data)</span></span>&#123;</span><br><span class="line">        JSONArray jsonArray=JSONArray.fromObject(data);</span><br><span class="line">        List&lt;T&gt; list= JSONArray.toList(jsonArray,t,<span class="keyword">new</span> JsonConfig());</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isBaseElem</span><span class="params">(Class clazz)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(Class elem:baseElem)&#123;</span><br><span class="line">            <span class="keyword">if</span>(elem==clazz)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">getBaseType</span><span class="params">(Class clazz)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> index=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(Class elem:baseElem)&#123;</span><br><span class="line">            <span class="keyword">if</span>(elem==clazz)&#123;</span><br><span class="line">                <span class="keyword">return</span> index;</span><br><span class="line">            &#125;</span><br><span class="line">            index++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 参考链接:&lt;br&gt;&lt;strong&gt;简单的网络请求工具的封装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/mu_ma_/article/details/106788500&quot;&gt;https://blog.csdn.net/mu_</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>刘鑫杰博客</title>
    <link href="https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/Hello-LXJ/"/>
    <id>https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/Hello-LXJ/</id>
    <published>2021-03-18T10:02:38.000Z</published>
    <updated>2021-03-20T08:26:39.801Z</updated>
    
    <content type="html"><![CDATA[<p> Humans are HOOKED. Machines are LEARNING.</p><p>Go for it! And I will form a good habit from then on.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; Humans are HOOKED. Machines are LEARNING.&lt;/p&gt;
&lt;p&gt;Go for it! And I will form a good habit from then on.&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>刘鑫杰博客</title>
    <link href="https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/CAS%E5%8E%9F%E7%90%86/"/>
    <id>https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/CAS%E5%8E%9F%E7%90%86/</id>
    <published>2021-03-18T10:02:38.000Z</published>
    <updated>2021-03-20T08:26:39.801Z</updated>
    
    <content type="html"><![CDATA[<p> Humans are HOOKED. Machines are LEARNING.</p><p>Go for it! And I will form a good habit from then on.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; Humans are HOOKED. Machines are LEARNING.&lt;/p&gt;
&lt;p&gt;Go for it! And I will form a good habit from then on.&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>刘鑫杰博客</title>
    <link href="https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/DFS%E5%92%8CBFS%E7%AC%94%E8%AE%B0/"/>
    <id>https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/DFS%E5%92%8CBFS%E7%AC%94%E8%AE%B0/</id>
    <published>2021-03-18T10:02:38.000Z</published>
    <updated>2021-03-20T08:26:39.801Z</updated>
    
    <content type="html"><![CDATA[<p> Humans are HOOKED. Machines are LEARNING.</p><p>Go for it! And I will form a good habit from then on.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; Humans are HOOKED. Machines are LEARNING.&lt;/p&gt;
&lt;p&gt;Go for it! And I will form a good habit from then on.&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>JDBC(能够对数据库进行增删改查)</title>
    <link href="https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/JDBC%E7%AC%94%E8%AE%B0/"/>
    <id>https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/JDBC%E7%AC%94%E8%AE%B0/</id>
    <published>2021-03-18T10:02:38.000Z</published>
    <updated>2021-03-21T13:52:04.401Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java语言连接数据库-JDBC"><a href="#Java语言连接数据库-JDBC" class="headerlink" title="Java语言连接数据库(JDBC)"></a>Java语言连接数据库(JDBC)</h1><p>笔记连接:<a href="https://blog.csdn.net/qq_43649223/article/details/106755584">https://blog.csdn.net/qq_43649223/article/details/106755584</a></p><p>参考连接:<a href="https://blog.csdn.net/upup1006/article/details/95470945">https://blog.csdn.net/upup1006/article/details/95470945</a></p><h2 id="1-JDBC-Java-database-connectivity"><a href="#1-JDBC-Java-database-connectivity" class="headerlink" title="1.JDBC: Java database connectivity"></a>1.JDBC: Java database connectivity</h2><h2 id="2-jdbc-的本质"><a href="#2-jdbc-的本质" class="headerlink" title="2.jdbc 的本质"></a>2.jdbc 的本质</h2><p>jdbc是sun公司制定的一套<strong>接口</strong>, 接口都有调用者和实现者.  面向接口调用, 面向接口写实现类, 这都属于面向接口编程</p><p>为什么要面向接口编程?  解耦合: 降低程序的耦合度, 提高程序的扩展力. 多态机制就是非常典型的: 面向抽象编程. (不要面向具体编程)</p><h2 id="3-为什么SUN制定一套接口"><a href="#3-为什么SUN制定一套接口" class="headerlink" title="3.为什么SUN制定一套接口?"></a>3.为什么SUN制定一套接口?</h2><p>因为每一个数据库的底层实现原理都不一样. oracle mysql MSserver 数据库都有自己的独特的实现原理</p><p>定义一套接口, 所有数据库厂家的Java程序员都按照这套接口去写实现类.   我们面向jdbc接口编程</p><h2 id="4-驱动"><a href="#4-驱动" class="headerlink" title="4.驱动"></a>4.驱动</h2><p>驱动:所有的数据库驱动都是以jar包的形式存在的,jar 中有很多.class文件, 这些class文件就是对jdbc接口的实现.    驱动都是接口的实现类.</p><p>驱动不是sun公司提供的, 而是各大数据库厂家负责提供,下载驱动jar包, 需要去数据库官网下载.</p><h2 id="5-模拟SUN-数据库厂家-我们角色"><a href="#5-模拟SUN-数据库厂家-我们角色" class="headerlink" title="5.模拟SUN 数据库厂家  我们角色"></a>5.模拟SUN 数据库厂家  我们角色</h2><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import java.util.ResourceBundle;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Java程序员</span></span><br><span class="line"><span class="comment"> * 不需要关系具体是哪个品牌的数据库, 只需要面向jdbc接口写代码</span></span><br><span class="line"><span class="comment"> * 面向接口编程</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public <span class="keyword">class</span> JavaProgrammer &#123;</span><br><span class="line">    public static void main(String<span class="literal">[]</span> args) throws Exception &#123;</span><br><span class="line"><span class="comment">//        JDBC jdbc=new MySql();</span></span><br><span class="line"><span class="comment">//        JDBC jdbc1=new SqlServer();</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建对象可以通过反射机制</span></span><br><span class="line">        ResourceBundle bundle=<span class="module-access"><span class="module"><span class="identifier">ResourceBundle</span>.</span></span>get<span class="constructor">Bundle(<span class="string">&quot;jdbc&quot;</span>)</span>;</span><br><span class="line">        String className=bundle.get<span class="constructor">String(<span class="string">&quot;className&quot;</span>)</span>;</span><br><span class="line">        Class clazz = <span class="module-access"><span class="module"><span class="identifier">Class</span>.</span></span><span class="keyword">for</span><span class="constructor">Name(<span class="params">className</span>)</span>;</span><br><span class="line">        JDBC jdbc=(JDBC)clazz.<span class="keyword">new</span><span class="constructor">Instance()</span>;</span><br><span class="line">        jdbc.get<span class="constructor">Connection()</span>;</span><br><span class="line"><span class="comment">//        jdbc1.getConnection();</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SqlServer</span>  <span class="keyword">implements</span> <span class="title">JDBC</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getConnection</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;连接SqlServer数据库成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">className</span>=MySql</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MySql</span> <span class="keyword">implements</span> <span class="title">JDBC</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getConnection</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="comment">//具体这里怎么写, 对于我们来说没有关系</span></span><br><span class="line">            <span class="comment">//这段代码涉及到mysql底层数据库的实现原理</span></span><br><span class="line">            System.out.println(<span class="string">&quot;连接mysql数据库成功&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Sun 公司负责制定的JDBC接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="symbol">JDBC</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 连接数据库的方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">   <span class="built_in">void</span> getConnection();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-JDBC开发前的准备工作"><a href="#6-JDBC开发前的准备工作" class="headerlink" title="6.JDBC开发前的准备工作"></a>6.JDBC开发前的准备工作</h2><p>先从官网下载对应的驱动jar包, 然后将其配置到环境变量classpath中</p><p>idea不需要这么配置, idea自动完成</p><h2 id="7-JDBC编程六步的概述-需要背会"><a href="#7-JDBC编程六步的概述-需要背会" class="headerlink" title="7.JDBC编程六步的概述(需要背会)"></a>7.JDBC编程六步的概述(需要背会)</h2><p>1.注册驱动(作用: 告诉Java程序,即将要连接的是哪个品牌的数据库)</p><p>2.获取连接(作用: 表示jvm的进程和数据库之间的通道打开了, 这属于进程之间的通信, 重量级, 使用完之后一定要关闭通道)</p><p>3.获取数据库操作对象(专门执行SQL语句的对象)</p><p>4.执行SQL语句(DQL,DML…)</p><p>5.处理查询结果集(只有当第四步执行的是select语句的时候,才有第五步处理查询的结果集)</p><p>6.释放资源(使用完资源之后一定要关闭资源,Java和数据库属于进程间的通信,开启之后一定要关闭)</p><p>学完jdbc, 下一站学框架</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Java语言连接数据库-JDBC&quot;&gt;&lt;a href=&quot;#Java语言连接数据库-JDBC&quot; class=&quot;headerlink&quot; title=&quot;Java语言连接数据库(JDBC)&quot;&gt;&lt;/a&gt;Java语言连接数据库(JDBC)&lt;/h1&gt;&lt;p&gt;笔记连接:&lt;a href</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>刘鑫杰博客</title>
    <link href="https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2021-03-18T10:02:38.000Z</published>
    <updated>2021-03-20T08:26:39.801Z</updated>
    
    <content type="html"><![CDATA[<p> Humans are HOOKED. Machines are LEARNING.</p><p>Go for it! And I will form a good habit from then on.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; Humans are HOOKED. Machines are LEARNING.&lt;/p&gt;
&lt;p&gt;Go for it! And I will form a good habit from then on.&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>刘鑫杰博客</title>
    <link href="https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/SpringBoot%E7%AC%94%E8%AE%B0/"/>
    <id>https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/SpringBoot%E7%AC%94%E8%AE%B0/</id>
    <published>2021-03-18T10:02:38.000Z</published>
    <updated>2021-03-20T08:26:39.801Z</updated>
    
    <content type="html"><![CDATA[<p> Humans are HOOKED. Machines are LEARNING.</p><p>Go for it! And I will form a good habit from then on.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; Humans are HOOKED. Machines are LEARNING.&lt;/p&gt;
&lt;p&gt;Go for it! And I will form a good habit from then on.&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MyBatis框架</title>
    <link href="https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/Mybatis/"/>
    <id>https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/Mybatis/</id>
    <published>2021-03-18T10:02:38.000Z</published>
    <updated>2021-03-24T04:06:11.712Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MyBatis框架"><a href="#MyBatis框架" class="headerlink" title="MyBatis框架"></a>MyBatis框架</h1><p>参考笔记链接:<a href="https://mybatis.org/mybatis-3/zh/getting-started.html">https://mybatis.org/mybatis-3/zh/getting-started.html</a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>MyBatis是操作数据库的， 相当于一个增强的JDBC, 用他来操作数据库比较简洁</p><p><img src="Mybatis.PNG" alt="Mybatis"></p><h2 id="第一章-MyBatis-框架爱概述"><a href="#第一章-MyBatis-框架爱概述" class="headerlink" title="第一章 MyBatis 框架爱概述"></a>第一章 MyBatis 框架爱概述</h2><p>1.框架的概念, 相关知识点, 三层架构</p><p>2.MVC是做web开发的一种模式, M: 数据, V:视图, C:控制器</p><p>3.三层架构: </p><p>界面层(跟用户直接打交道的, 接受用户的请求参数, 比如有jsp,html,servlet), </p><p>业务逻辑层(接受界面层传过来的数据, 计算逻辑,调用数据库, 获取数据 比如service), </p><p>数据访问(和数据库进行打交道的, 对数据库进行访问,执行对数据的查询,修改,删除等等)</p><p>三层对应的包:</p><p>​    界面层: controller (servlet)</p><p>​    业务逻辑层: service 包(xxxservice 类)</p><p>​    数据访问层: dao包(xxxDao类)</p><p>三层中类的交互</p><p>​    用户使用界面层–&gt;业务逻辑层–&gt;数据访问层(持久层)–&gt;数据库</p><p>三层对应的处理框架</p><p>​    界面层—–servlet—-springmvc(现在用这个框架, 代替servlet来做界面层的功能)</p><p>​    业务逻辑层—-service类—–spring(框架, 用它来管理service中的这些类)</p><p>​    数据访问层—-dao类—–mybatis(框架, 用它来代替JDBC来访问数据库)</p><p>前两个规模比较大, 第三个比较简单小.</p><p>4.框架(半成品软件, 定义好了一些基础功能, 需要加入你的功能就是完善了, 基础功能是可重复使用的,可升级的)</p><p>​    框架是一个舞台, 一个模板(相当于你平时生活中填的各种表格, 设计出来以后你只需要照着内容填就可以了).  定义好了一些功能, 可加入自己的功能</p><p>​    每个公司都有自己的框架</p><p>​    模板: 1. 规定了好了一些自己的条款,内容   2.加入了自己的东西</p><p>​    特点: 1.框架一般不是全能的, 不能做所有事情  2.框架是针对某一个领域有效, 特长是在某一个方面.  比如MyBatis做数据库强, 但是他不能干别的</p><p>5.MyBatis 框架, 早期叫做ibatis,  代码在github上.   MyBatis是MyBatis sql Mapper Framework for java(sql 映射框架)</p><p>​    1)sql mapper : sql映射<br>​        可以把数据库表中的一行数据, 映射为一个Java对象.  一行数据可以看做是一个Java对象, 操作这个对象, 就相当于操作表中的数据</p><p>​    2)Data access Objects (DAOS) : 数据访问对象, 对数据库执行增删改查</p><p>MyBatis提供的功能: </p><p>​    1.提供了创建connection , statement, resultset 的能力 不用开发人员创建这些对象了</p><p>​    2.提供了执行sql语句的能力, 不用你执行sql</p><p>​    3.提供了循环sql, 把sql的结果转为Java对象, list集合的能力</p><p>​    4.提供了关闭资源的能力, 不用你关闭connection,statement, resultset</p><p>我们开发人员做的就是提供sql语句(站在巨人的肩膀上)</p><p>最后是: 开发人员提供sql语句—-MyBatis处理sql—开发人员得到list集合或者Java对象(表中数据)</p><p>总结: MyBatis是一个sql映射框架, 提供的数据的操作能力,增强的jdbc</p><h2 id="第二章-MyBatis-框架快速入门"><a href="#第二章-MyBatis-框架快速入门" class="headerlink" title="第二章 MyBatis 框架快速入门"></a>第二章 MyBatis 框架快速入门</h2><p>快速使用mybatis, 进行数据库的操作</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">从项目开始, 往pom.xml中的build中加东西实现一个查询数据库的功能</span><br><span class="line">实现的步骤:</span><br><span class="line"><span class="number">1.</span>在Navicat <span class="keyword">for</span> mysql中新建一个student的表</span><br><span class="line"><span class="number">2.</span>加入maven的MyBatis坐标, mysql的驱动坐标</span><br><span class="line"><span class="number">3.</span>创建实体类, student<span class="comment">-- 保存表中的一行数据</span></span><br><span class="line"><span class="number">4.</span>创建持久层(数据访问层)的dao接口, 定义操作数据库的方法</span><br><span class="line"><span class="number">5.</span>创建一个MyBatis使用的配置文件</span><br><span class="line">    叫做<span class="keyword">sql</span>映射文件: 写<span class="keyword">sql</span>语句的, 一般是一个表一个<span class="keyword">sql</span>映射文件</span><br><span class="line">    这个文件<span class="type">xml</span>文件</span><br><span class="line">    注意:这里的<span class="keyword">sql</span>映射文件写在接口所在的目录下.  同时文件的名称和接口保持一致</span><br><span class="line"><span class="number">6.</span>创建MyBatis的主配置文件</span><br><span class="line">    一个项目就一个主配置文件</span><br><span class="line">    主配置文件提供了数据库的连接信息和<span class="keyword">sql</span>映射文件的位置信息</span><br><span class="line"><span class="number">7.</span>创建使用MyBatis类</span><br><span class="line">    通过使用MyBatis访问数据库</span><br></pre></td></tr></table></figure><p>idea中的xml文件代码的注释方法仍然是Ctrl+/</p><p>1.pom.xml的依赖中添加MyBatis依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--mybatis依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.加载mysql驱动</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--mysql的驱动--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上述操作之后最好右键pom.xml  Maven–&gt; reimport一遍  养成习惯, 手动更新一下</p><p>3.补充: 查看mysql的版本: mysql -V 我的版本是8.0.17</p><p>​    数据库连不上的原因:</p><ol><li>首先就检查驱动版本和mysql版本一不一致，如果是连公司的数据库基本不怎么会出现版本不一致的情况，但是本地测试就需要注意一个</li><li>检查路径、驱动、用户名和密码是否正确</li><li>mysql有没有grant权限，允许外部访问</li><li>还有可能是你的数据库崩了</li></ol><p>项目下生成APP是默认类, 不需要, 可以直接删除, test下面也有一个, 也可以删除</p><p>4.补充:</p><p>domain的概念，通常会分很多层，比如经典的三层架构，控制层、业务层、数据访问层（DAO），此外，还有一个层，就是domain层</p><p>domain层，通常就是用于放置这个系统中，与数据库中的表，一一对应起来的JavaBean的</p><p>model层：和domain区别；可能都是javaBean，</p><p>这个区别是用途不同，domain通常就代表了与数据库表–一一对应的javaBean,</p><p>model通常代表了不与数据库一一对应的javaBean，但是封装的数据是前端的JS脚本，需要使用的数据</p><p>5.补充</p><p>namespace是改接口的</p><p>6.代码</p><p><strong>StudentDao.xml</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.liuxinjie.LXJ.dao.StudentDao&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        select: 表示查询操作</span></span><br><span class="line"><span class="comment">        id:你要执行的sql语法的唯一标识, id写接口方法名, MyBatis会使用这个id的值来找到要执行sql语句</span></span><br><span class="line"><span class="comment">            可以自定义, 但是要去你使用接口中的方法名称</span></span><br><span class="line"><span class="comment">        总结: namespace写接口类名,   id写方法名</span></span><br><span class="line"><span class="comment">        resulttype: 表示结果类型的, 是sql语句执行后得到的resultset, 遍历这个resultset得到的Java对象的类型</span></span><br><span class="line"><span class="comment">            它的值写的是类型的全限定名称(具体操作就是: 返回到Student类中, 选中类名Student, 右键选中copy reference)</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectStudents&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.liuxinjie.LXJ.domain.Student&quot;</span>&gt;</span></span><br><span class="line">        select id,name,email,age from student order by id</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    sql映射文件: 写sql语句的, MyBatis会执行这些sql</span></span><br><span class="line"><span class="comment">    内容:</span></span><br><span class="line"><span class="comment">    1.指定约束文件的</span></span><br><span class="line"><span class="comment">        &lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="comment">        PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span><br><span class="line"><span class="comment">        &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      mybatis-3-mapper.dtd是约束文件的名称, 扩展名是dtd</span></span><br><span class="line"><span class="comment">    2.约束文件的作用: 限制和检查在当前文件中出现的标签, 属性必须符合MyBatis的要求</span></span><br><span class="line"><span class="comment">    3.mapper 是当前文件的根标签, 必须的.</span></span><br><span class="line"><span class="comment">        namespace: 叫做命名空间, 唯一值, 可以是自定义的字符串</span></span><br><span class="line"><span class="comment">                    要求你使用dao接口全限定名称.即com.liuxinjie.LXJ.dao.StudentDao   每个上层包都要写出来</span></span><br><span class="line"><span class="comment">    4.在当前文件中, 可以使用特定的标签, 表示数据库的特定操作</span></span><br><span class="line"><span class="comment">        &lt;select&gt;: 表示执行查询</span></span><br><span class="line"><span class="comment">        &lt;update&gt;: 表示更新数据库的操作, 就是在&lt;update&gt;标签中写的update sql语句</span></span><br><span class="line"><span class="comment">        &lt;insert&gt;: 表示插入, 放的是insert语句</span></span><br><span class="line"><span class="comment">        &lt;delete&gt;: 表示删除, 执行的是delete与</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Student.java</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">package com.liuxinjie.LXJ.domain;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Liuxinjie</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/3/22 022 13:37</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@software</span> IDEA</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">import lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 3.创建实体类, student-- 保存表中的一行数据</span></span><br><span class="line"><span class="comment"> * 推荐和表名一样容易记忆</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">@Data</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">Integer</span> id;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> email;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">Integer</span> age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>StudentDao.xml</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.liuxinjie.LXJ.dao.StudentDao&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        select: 表示查询操作</span></span><br><span class="line"><span class="comment">        id:你要执行的sql语法的唯一标识, id写接口方法名, MyBatis会使用这个id的值来找到要执行sql语句</span></span><br><span class="line"><span class="comment">            可以自定义, 但是要去你使用接口中的方法名称</span></span><br><span class="line"><span class="comment">        总结: namespace写接口类名,   id写方法名</span></span><br><span class="line"><span class="comment">        resulttype: 表示结果类型的, 是sql语句执行后得到的resultset, 遍历这个resultset得到的Java对象的类型</span></span><br><span class="line"><span class="comment">            它的值写的是类型的全限定名称(具体操作就是: 返回到Student类中, 选中类名Student, 右键选中copy reference)</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectStudents&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.liuxinjie.LXJ.domain.Student&quot;</span>&gt;</span></span><br><span class="line">        select id,name,email,age from student order by id</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    sql映射文件: 写sql语句的, MyBatis会执行这些sql</span></span><br><span class="line"><span class="comment">    内容:</span></span><br><span class="line"><span class="comment">    1.指定约束文件的</span></span><br><span class="line"><span class="comment">        &lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="comment">        PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span><br><span class="line"><span class="comment">        &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      mybatis-3-mapper.dtd是约束文件的名称, 扩展名是dtd</span></span><br><span class="line"><span class="comment">    2.约束文件的作用: 限制和检查在当前文件中出现的标签, 属性必须符合MyBatis的要求</span></span><br><span class="line"><span class="comment">    3.mapper 是当前文件的根标签, 必须的.</span></span><br><span class="line"><span class="comment">        namespace: 叫做命名空间, 唯一值, 可以是自定义的字符串</span></span><br><span class="line"><span class="comment">                    要求你使用dao接口全限定名称.即com.liuxinjie.LXJ.dao.StudentDao   每个上层包都要写出来</span></span><br><span class="line"><span class="comment">    4.在当前文件中, 可以使用特定的标签, 表示数据库的特定操作</span></span><br><span class="line"><span class="comment">        &lt;select&gt;: 表示执行查询</span></span><br><span class="line"><span class="comment">        &lt;update&gt;: 表示更新数据库的操作, 就是在&lt;update&gt;标签中写的update sql语句</span></span><br><span class="line"><span class="comment">        &lt;insert&gt;: 表示插入, 放的是insert语句</span></span><br><span class="line"><span class="comment">        &lt;delete&gt;: 表示删除, 执行的是delete与</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><p><strong>pom.xml</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.liuxinjie<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>WebMybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>10<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>10<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--mybatis依赖--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--mysql的驱动--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span><span class="comment">&lt;!--所在的目录--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!--包括目录下的.properties.xml文件都会扫描到--&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">source</span>&gt;</span>10<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span>&gt;</span>10<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>mybatis.xml</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--环境配置:数据库的连接信息</span></span><br><span class="line"><span class="comment">        default： 必须和某个environment的id值一样</span></span><br><span class="line"><span class="comment">        告诉MyBatis使用哪个数据库的连接信息. 也就是访问哪个数据库</span></span><br><span class="line"><span class="comment">        即下面的default和id要一致</span></span><br><span class="line"><span class="comment">        因为每个environment代表一个数据库, 可能有多个id, 究竟连接哪个数据库, id就等于多少</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--environment : 一个数据库信息的配置, 环境</span></span><br><span class="line"><span class="comment">            id: 一个唯一值, 自定义, 表示环境的名称, 这里可以自定义, 随便取--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                transactionManager: 表示MyBatis的事务类型</span></span><br><span class="line"><span class="comment">                    type:JDBC(表示使用jdbc中的connection对象commit,rollback做事务处理)</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                datasource: 表示数据源, 连接数据库的</span></span><br><span class="line"><span class="comment">                   type: 表示数据源的类型, POOLED表示使用连接池</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--下面这四个表示连接数据库的具体信息的</span></span><br><span class="line"><span class="comment">                    --&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">&lt;!--数据库的驱动类名--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--连接数据库的url字符串--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/test1?characterEncoding=utf-8<span class="symbol">&amp;amp;</span>useSSL=false<span class="symbol">&amp;amp;</span>serverTimezone=UTC&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--访问数据库用户名--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--密码--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;533533&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--sql mapper(sql映射文件的位置)--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--一个mapper 标签自定一个文件的位置</span></span><br><span class="line"><span class="comment">            从类路径开始的路径信息</span></span><br><span class="line"><span class="comment">            即: target/classes下面的路径, 把target/classes这个头去掉</span></span><br><span class="line"><span class="comment">            target文件只有编译(右边maven下lifecycle下compile)了才有</span></span><br><span class="line"><span class="comment">            也可以直接拷贝Java下面的StudentDao.xml的路径, 然后将com.前面的路径去掉即可</span></span><br><span class="line"><span class="comment">            为什么要找这个路径, 因为这个文件中有sql语句的出现</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/liuxinjie/LXJ/dao/StudentDao.xml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;mapper resource=&quot;com/liuxinjie/LXJ/dao/SchoolDao.xml&quot;/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;mapper resource=&quot;com/liuxinjie/LXJ/dao/DeptDao.xml&quot;/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--这里的可以写多个, 因为可能有不同的配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    文件介绍: MyBatis的主配置文件, 主要定义了数据库的配置信息, sql映射文件的位置</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    1.约束文件</span></span><br><span class="line"><span class="comment">    &lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="comment">        PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span><br><span class="line"><span class="comment">        &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;</span></span><br><span class="line"><span class="comment">    mybatis-3-config.dtd: 约束文件的名称</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    2.configuration 根标签</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><h2 id="第三章-MyBatis-Dao代理-重点"><a href="#第三章-MyBatis-Dao代理-重点" class="headerlink" title="第三章 MyBatis Dao代理(重点)"></a>第三章 MyBatis Dao代理(重点)</h2><p>mybatis的各种用法</p><h2 id="第四章-MyBatis-动态SQL-重点"><a href="#第四章-MyBatis-动态SQL-重点" class="headerlink" title="第四章 MyBatis 动态SQL(重点)"></a>第四章 MyBatis 动态SQL(重点)</h2><p>动态拼接</p><h2 id="第五章-MyBatis-配置文件"><a href="#第五章-MyBatis-配置文件" class="headerlink" title="第五章 MyBatis 配置文件"></a>第五章 MyBatis 配置文件</h2><p>了解</p><h2 id="第六章-MyBatis-扩展"><a href="#第六章-MyBatis-扩展" class="headerlink" title="第六章 MyBatis 扩展"></a>第六章 MyBatis 扩展</h2><p>pagehelp, 做数据分页</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MyBatis框架&quot;&gt;&lt;a href=&quot;#MyBatis框架&quot; class=&quot;headerlink&quot; title=&quot;MyBatis框架&quot;&gt;&lt;/a&gt;MyBatis框架&lt;/h1&gt;&lt;p&gt;参考笔记链接:&lt;a href=&quot;https://mybatis.org/mybati</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>刘鑫杰博客</title>
    <link href="https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/hashmap/"/>
    <id>https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/hashmap/</id>
    <published>2021-03-18T10:02:38.000Z</published>
    <updated>2021-03-20T08:26:39.801Z</updated>
    
    <content type="html"><![CDATA[<p> Humans are HOOKED. Machines are LEARNING.</p><p>Go for it! And I will form a good habit from then on.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; Humans are HOOKED. Machines are LEARNING.&lt;/p&gt;
&lt;p&gt;Go for it! And I will form a good habit from then on.&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>maven配置</title>
    <link href="https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/maven%E9%85%8D%E7%BD%AE/"/>
    <id>https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/maven%E9%85%8D%E7%BD%AE/</id>
    <published>2021-03-18T10:02:38.000Z</published>
    <updated>2021-03-23T05:29:49.239Z</updated>
    
    <content type="html"><![CDATA[<h1 id="maven配置"><a href="#maven配置" class="headerlink" title="maven配置"></a>maven配置</h1><h2 id="1-maven简介"><a href="#1-maven简介" class="headerlink" title="1.maven简介"></a>1.maven简介</h2><p>一种项目的管理工具, Maven主要是进行开发包的管理.   </p><p>我们对于这些开发包的引用，最初的做法：下载下来*.jar文件，而后在需要的地方拷贝到项目的WEB-INF/lib目录之中就可以使用了，但是这种方式很多时候并不方便，如果说现在开发包的版本很多。</p><p>所以为了解决这样的问题，专门由Apache提供了一个开发包的工具管理—–Maven<br>Maven除了开发包管理之外还可具备项目的编译、测试等功能。</p><p>在整个的Maven之中，对于所有的开发包管理实际上都是依靠了一个pom.xml文件完成的，这个文件可以实现开发包的版本切换，当然也可以进行一些连接的配置，或者是项目子模块的配置。</p><h2 id="命令"><a href="#命令" class="headerlink" title="命令:"></a>命令:</h2><ol><li><p>mvn -v  查看meavn的版本号</p></li><li><p>我的Java版本是1.8.0_131</p><p>Maven home: D:\apache-maven-3.5.2\bin..<br>Java version: 1.8.0_131, vendor: Oracle Corporation<br>Java home: D:\Program Files\Java\jdk1.8.0_131\jre</p></li><li><p>D:\apache-maven-3.5.2\conf 目录先有setting.xml</p></li><li><p>D:\apache-maven-3.5.2\repository</p></li><li><p><a href="https://blog.csdn.net/qq_41113081/article/details/89074169?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_baidulandingword-0&amp;spm=1001.2101.3001.4242">https://blog.csdn.net/qq_41113081/article/details/89074169?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_baidulandingword-0&amp;spm=1001.2101.3001.4242</a>    在IDEA中使用MyBatis的教程</p></li><li><p>maven 是一个包管理器， 可以通过pom.xml 文件给自动导包和下包。 为一个已存在的工程添加maven， 右键，选择Add Framworks Support——&gt;选择maven</p><p>此时就会生成pom.xml文件，可以在该文件里面添加项目的依赖了，<strong>此时要注意：maven在编译的时候，默认使用的是jdk1.5,如果要指定jdk的版本，需要在pom.xml文件中加入如下配置（修改jdk版本为1.8）</strong></p> <properties>     <maven.compiler.source>1.8</maven.compiler.source>     <maven.compiler.target>1.8</maven.compiler.target> </properties>https://blog.csdn.net/xyh930929/article/details/78936611</li></ol><p>正确的项目结构<strong>第二步 修改项目结构</strong></p><p>在项目的src下面创建main/java和main/resources目录.<br>File—&gt;Project Structure 或者快捷键Ctrl+Shift+Alt+s.</p><p><img src="https://img-blog.csdn.net/20171230111939446?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHloOTMwOTI5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>将Sources定位到java目录下，将Resources定位到resources下面.</p><p>此处补充idea下的java项目关于不同资源的标识符。转自博客<a href="http://blog.csdn.net/qq_27093465/article/details/52912444">http://blog.csdn.net/qq_27093465/article/details/52912444</a></p><p>Sources 一般用于标注类似 src 这种可编译目录。有时候我们不单单项目的 src 目录要可编译，还有其他一些特别的目录也许我们也要作为可编译的目录，就需要对该目录进行此标注。只有 Sources 这种可编译目录才可以新建 Java 类和包，这一点需要牢记。</p><p>Tests 一般用于标注可编译的单元测试目录。在规范的 maven 项目结构中，顶级目录是<br>src，maven 的 src 我们是不会设置为 Sources 的，而是在其子目录 main 目录下的 java 目录，我们会设置为 Sources。而单元测试的目录是 src - test - java，这里的 java 目录我们就会设置为 Tests，表示该目录是作为可编译的单元测试目录。一般这个和后面几个我们都是在 maven 项目下进行配置的，但是我这里还是会先说说。从这一点我们也可以看出 IntelliJ IDEA 对 maven 项目的支持是比彻底的。</p><p>Resources 一般用于标注资源文件目录。在 maven 项目下，资源目录是单独划分出来的，其目录为：src - main -resources，这里的 resources 目录我们就会设置为 Resources，表示该目录是作为资源目录。资源目录下的文件是会被编译到输出目录下的。</p><p>Test Resources 一般用于标注单元测试的资源文件目录。在 maven 项目下，单元测试的资源目录是单独划分出来的，其目录为：src - test -resources，这里的 resources 目录我们就会设置为 Test Resources，表示该目录是作为单元测试的资源目录。资源目录下的文件是会被编译到输出目录下的。</p><p>Excluded 一般用于标注排除目录。被排除的目录不会被 IntelliJ IDEA 创建索引，相当于被 IntelliJ IDEA 废弃，该目录下的代码文件是不具备代码检查和智能提示等常规代码功能。<br>通过上面的介绍，我们知道对于非 maven 项目我们只要会设置 src 即可。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;maven配置&quot;&gt;&lt;a href=&quot;#maven配置&quot; class=&quot;headerlink&quot; title=&quot;maven配置&quot;&gt;&lt;/a&gt;maven配置&lt;/h1&gt;&lt;h2 id=&quot;1-maven简介&quot;&gt;&lt;a href=&quot;#1-maven简介&quot; class=&quot;header</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>pom.xml文件详解</title>
    <link href="https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/pom_xml%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/"/>
    <id>https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/pom_xml%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/</id>
    <published>2021-03-18T10:02:38.000Z</published>
    <updated>2021-03-22T13:50:54.676Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Maven之pom-xml配置文件详解"><a href="#1-Maven之pom-xml配置文件详解" class="headerlink" title="1.Maven之pom.xml配置文件详解"></a>1.Maven之pom.xml配置文件详解</h2><p><a href="https://blog.csdn.net/qq_33363618/article/details/79438044">https://blog.csdn.net/qq_33363618/article/details/79438044</a></p><h2 id="2-maven配置总结-pom-xml和settings-xml"><a href="#2-maven配置总结-pom-xml和settings-xml" class="headerlink" title="2.maven配置总结(pom.xml和settings.xml)"></a>2.maven配置总结(pom.xml和settings.xml)</h2><p><a href="https://blog.csdn.net/zjy_love_java/article/details/102734248?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&amp;dist_request_id=&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control">https://blog.csdn.net/zjy_love_java/article/details/102734248?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&amp;dist_request_id=&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control</a></p><h2 id="3-build-里面的内容"><a href="#3-build-里面的内容" class="headerlink" title="3. build 里面的内容"></a>3. build 里面的内容</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span><span class="comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-clean-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.22.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-jar-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-install-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-deploy-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-site-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.7.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-project-info-reports-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-Maven之pom-xml配置文件详解&quot;&gt;&lt;a href=&quot;#1-Maven之pom-xml配置文件详解&quot; class=&quot;headerlink&quot; title=&quot;1.Maven之pom.xml配置文件详解&quot;&gt;&lt;/a&gt;1.Maven之pom.xml配置文件详解&lt;/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>刘鑫杰博客</title>
    <link href="https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/redis/"/>
    <id>https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/redis/</id>
    <published>2021-03-18T10:02:38.000Z</published>
    <updated>2021-03-20T08:26:39.801Z</updated>
    
    <content type="html"><![CDATA[<p> Humans are HOOKED. Machines are LEARNING.</p><p>Go for it! And I will form a good habit from then on.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; Humans are HOOKED. Machines are LEARNING.&lt;/p&gt;
&lt;p&gt;Go for it! And I will form a good habit from then on.&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>刘鑫杰博客</title>
    <link href="https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/"/>
    <id>https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/</id>
    <published>2021-03-18T10:02:38.000Z</published>
    <updated>2021-03-20T08:26:39.801Z</updated>
    
    <content type="html"><![CDATA[<p> Humans are HOOKED. Machines are LEARNING.</p><p>Go for it! And I will form a good habit from then on.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; Humans are HOOKED. Machines are LEARNING.&lt;/p&gt;
&lt;p&gt;Go for it! And I will form a good habit from then on.&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>刘鑫杰博客</title>
    <link href="https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/%E4%B9%90%E8%A7%82%E9%94%81%E5%92%8C%E6%82%B2%E8%A7%82%E9%94%81/"/>
    <id>https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/%E4%B9%90%E8%A7%82%E9%94%81%E5%92%8C%E6%82%B2%E8%A7%82%E9%94%81/</id>
    <published>2021-03-18T10:02:38.000Z</published>
    <updated>2021-03-20T08:26:39.801Z</updated>
    
    <content type="html"><![CDATA[<p> Humans are HOOKED. Machines are LEARNING.</p><p>Go for it! And I will form a good habit from then on.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; Humans are HOOKED. Machines are LEARNING.&lt;/p&gt;
&lt;p&gt;Go for it! And I will form a good habit from then on.&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>刘鑫杰博客</title>
    <link href="https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92(%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98)/"/>
    <id>https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92(%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98)/</id>
    <published>2021-03-18T10:02:38.000Z</published>
    <updated>2021-03-20T08:26:39.801Z</updated>
    
    <content type="html"><![CDATA[<p> Humans are HOOKED. Machines are LEARNING.</p><p>Go for it! And I will form a good habit from then on.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; Humans are HOOKED. Machines are LEARNING.&lt;/p&gt;
&lt;p&gt;Go for it! And I will form a good habit from then on.&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>前端笔记</title>
    <link href="https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/%E5%89%8D%E6%AE%B5%E7%AC%94%E8%AE%B0/"/>
    <id>https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/%E5%89%8D%E6%AE%B5%E7%AC%94%E8%AE%B0/</id>
    <published>2021-03-18T10:02:38.000Z</published>
    <updated>2021-03-23T13:51:33.360Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-html-简介"><a href="#1-html-简介" class="headerlink" title="1.html 简介"></a>1.html 简介</h2><p>超文本标记语言Hyper Text Markup language</p><p>超文本: 超级文本, 例如流媒体, 声音,视频,图片</p><p>标记语言:这种语言由大量的标签组成</p><p>任何一个标签都有开始标签和结束标签, 例如</p><p>&lt;标签&gt;:开始标签</p><p>&lt;/标签&gt;:结束标签</p><p>html严格意义上来说是一种规范,一种浏览器上的规范, 标签语言, 不能称为编程语言, 因为html中没有变量,数据类型 控制语句等等</p><h2 id="2-html运行在浏览器上"><a href="#2-html运行在浏览器上" class="headerlink" title="2.html运行在浏览器上"></a>2.html运行在浏览器上</h2><p>世界主流浏览器: </p><p>IE 微软的</p><p>火狐</p><p>谷歌</p><p>opera 欧朋</p><p>Safari : MAC OS 专用(苹果专用浏览器)</p><p>前端程序员开发完成之后, 需要在不同的浏览器上运行程序, 以便发现浏览器兼容的问题</p><h2 id="3-html如何开发"><a href="#3-html如何开发" class="headerlink" title="3.html如何开发"></a>3.html如何开发</h2><p>新建一个.html或者.htm结尾的文件</p><p>使用记事本打开就能开发, 浏览器打开就能运行, 不需要编译</p><h2 id="4-Web概念"><a href="#4-Web概念" class="headerlink" title="4.Web概念"></a>4.Web概念</h2><p>web就是网站开发</p><h2 id="5-web程序员包括"><a href="#5-web程序员包括" class="headerlink" title="5.web程序员包括"></a>5.web程序员包括</h2><p>web前端程序员: 需要精通html, CSS , js   主要负责前端浏览器展示的效果, web前端的需要的动态数据需要后台提供</p><p>web后台程序员: 需要精通, 这个就不一定了.  前端也必须要通一些.  比如一些网站上的图片都存在服务器或者数据库里面.  等等各种数据都在后台</p><p>这种架构被称为B/S结构的系统</p><p>B: browser浏览器</p><p>S: Server服务器 Java</p><h2 id="6-第一个html代码"><a href="#6-第一个html代码" class="headerlink" title="6.第一个html代码"></a>6.第一个html代码</h2><p>可以在idea上面敲</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--这是html注释信息--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--这是根--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--头--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--中文乱码,则需要在head内部加入下面语句--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--标题栏--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>My First html page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--这是网页体--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--这里的内容显示到网页上--&gt;</span></span><br><span class="line">        这是我的第一个html页面</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--加入一个输入文本框--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="7-基本标签"><a href="#7-基本标签" class="headerlink" title="7.基本标签"></a>7.基本标签</h2><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span><span class="xml"><span class="tag">&lt;<span class="name">title</span>&gt;</span>基本标签<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!--段落标记--&gt;</span></span></span><br><span class="line"><span class="xml">        </span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>分段<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>分段<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">        分段</span></span><br><span class="line"><span class="xml">        分段</span></span><br><span class="line"><span class="xml">        分段</span></span><br><span class="line"><span class="xml">        分段</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--标题字--&gt;</span></span></span><br><span class="line"><span class="xml">        </span><span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题字<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span><span class="xml"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>标题字<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span><span class="xml"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>标题字<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span><span class="xml"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>标题字<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span><span class="xml"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>标题字<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span><span class="xml"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>标题字<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--换行标记, 长了一只眼睛, 独木标签--&gt;</span></span></span><br><span class="line"><span class="xml">    hello</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span> world!</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--添加一条横线, 水平线, 独目标签--&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!--color是一个属性, 用来指定颜色值--&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!--html中的字符串可以使用双引号, 也可以使用单引号--&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="comment">&lt;!--html的语法hen松散, 不严格, 去掉单引号也行! 大小写都一样, 不区分大小写--&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">hr</span> <span class="attr">color</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">hr</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--预留格式: 把你原本在源代码里面的格式不改变的展示到浏览器上--&gt;</span></span></span><br><span class="line"><span class="xml">        </span><span class="xml"><span class="tag">&lt;<span class="name">pre</span>&gt;</span></span></span><br><span class="line"><span class="xml">    for(int i=0;i&lt;100;i++)</span><span class="xquery">&#123;</span></span><br><span class="line"><span class="xquery">        System.out.println(<span class="string">&quot;i=&quot;</span>+i);</span></span><br><span class="line"><span class="xquery">    &#125;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--粗体字--&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>粗体字<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--斜体字--&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">i</span>&gt;</span>斜体字<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--插入字: 字下面有下划线--&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">ins</span>&gt;</span>插入字<span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">del</span>&gt;</span>删除字<span class="tag">&lt;/<span class="name">del</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--10^2, 右上标--&gt;</span></span></span><br><span class="line"><span class="xml">    10</span><span class="xml"><span class="tag">&lt;<span class="name">sup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--10的下标是2, 右下标--&gt;</span></span></span><br><span class="line"><span class="xml">    10</span><span class="xml"><span class="tag">&lt;<span class="name">sub</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sub</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--font字体标签--&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#a52a2a&quot;</span> <span class="attr">size</span>=<span class="string">&quot;12&quot;</span>&gt;</span>刘鑫杰<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="8-实体符号"><a href="#8-实体符号" class="headerlink" title="8.实体符号"></a>8.实体符号</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--凡是html页面中含有下面这行代码的,表示该页面是一个html5页面: H5--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--lang:语言  en:英语--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--告诉浏览器采用那一种编码方式打开, 一般要和文件的格式相同, 不然就会乱码--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--在windows操作系统的浏览器在没有指定任何编码方式的时候, 默认采用gbk格式打开任何文件--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--我们windows操作系统是简体中文环境--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--而我们程序员的工作区文件都是utf-8, 因为Unicode更加通用--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--当前这个文件是utf8的编码格式, 如果不写以下代码, 浏览器会默认采用gbk的方式打开文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>实体符号<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--空格--&gt;</span></span><br><span class="line">    a<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>bc</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--小于号和大于号--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--如何表达  b&lt;a&gt;c   --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--其中&amp;lt是小于号, &amp;gt是大于号--&gt;</span></span><br><span class="line">    b<span class="symbol">&amp;lt;</span>a<span class="symbol">&amp;gt;</span>c</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="9-html表格"><a href="#9-html表格" class="headerlink" title="9.html表格"></a>9.html表格</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>表格<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--输入技巧: 不要打尖号, 直接输入标签, idea会帮你自动补全--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--html表格, 每一行是tr, 每一行里面的格子是td--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--border用来设置边框的宽度, 1px表示1像素--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--width表示表的宽度300px, height表示表的高度200px--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--也可设置为百分比就是占浏览器的比例--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1px&quot;</span> <span class="attr">width</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">heighth</span>=<span class="string">&quot;30%&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--第一行--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--第二行--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="10-单元格的合并"><a href="#10-单元格的合并" class="headerlink" title="10 单元格的合并"></a>10 单元格的合并</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>表格单元格的合并<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;30%&quot;</span> <span class="attr">border</span>=<span class="string">&quot;2px&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--列合并: 合并x y.   首先要删除一个格子--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;td&gt;y&lt;/td&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--行合并, 希望刘鑫  杰合并, 使用rowspan--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>刘鑫杰<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;td&gt;杰&lt;/td&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="11-th标签"><a href="#11-th标签" class="headerlink" title="11 th标签"></a>11 th标签</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>th标签<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1px&quot;</span> <span class="attr">width</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;30%&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;td&gt;员工编号&lt;/td&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;td&gt;员工姓名&lt;/td&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;td&gt;员工工资&lt;/td&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;td&gt;员工性别&lt;/td&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;td&gt;员工年龄&lt;/td&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--th可以代替td做单元格, th中的单元格会自动加粗,自动居中--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>员工编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>员工姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>员工工资<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>员工性别<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>员工年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>001<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>刘鑫杰<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>21<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>男<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>23<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>002<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>刘红<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>33<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>男<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>12<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="12-thead-tbody-tfoot"><a href="#12-thead-tbody-tfoot" class="headerlink" title="12 thead  tbody  tfoot"></a>12 thead  tbody  tfoot</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>thead tbody tfoot<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--一个表格可以被thead  tbody  tfoot分割为三部分--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--这个语法主要是为了后期js写代码提供方便--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--头身体尾巴--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1px&quot;</span> <span class="attr">width</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;30%&quot;</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;td&gt;员工编号&lt;/td&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;td&gt;员工姓名&lt;/td&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;td&gt;员工工资&lt;/td&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;td&gt;员工性别&lt;/td&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;td&gt;员工年龄&lt;/td&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--th可以代替td做单元格, th中的单元格会自动加粗,自动居中--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>员工编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>员工姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>员工工资<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>员工性别<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>员工年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>001<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>刘鑫杰<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>21<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>男<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>23<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>002<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>刘红<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>33<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>男<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>12<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>x<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>y<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>z<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>m<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>n<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="13-图片与背景图片"><a href="#13-图片与背景图片" class="headerlink" title="13 图片与背景图片"></a>13 图片与背景图片</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>背景颜色图片<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#7fff00&quot;</span> <span class="attr">background</span>=<span class="string">&quot;zhuzhong_school.jpg&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--body标签的bgcolor 指定背景颜色</span></span><br><span class="line"><span class="comment">background指定背景图片--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--图片与背景图片的区别: 图片是漂浮在浏览器上的, 背景图片是嵌在浏览器里面的--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--alt 为图片无法显示的时候显示的文字--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;girls.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;图片&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-html-简介&quot;&gt;&lt;a href=&quot;#1-html-简介&quot; class=&quot;headerlink&quot; title=&quot;1.html 简介&quot;&gt;&lt;/a&gt;1.html 简介&lt;/h2&gt;&lt;p&gt;超文本标记语言Hyper Text Markup language&lt;/p&gt;
&lt;p&gt;超</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>刘鑫杰博客</title>
    <link href="https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/%E5%8F%8D%E5%B0%84%E7%AC%94%E8%AE%B0/"/>
    <id>https://helloliuxinjie.github.io/myblog.github.io/2021/03/18/%E5%8F%8D%E5%B0%84%E7%AC%94%E8%AE%B0/</id>
    <published>2021-03-18T10:02:38.000Z</published>
    <updated>2021-03-20T08:26:39.801Z</updated>
    
    <content type="html"><![CDATA[<p> Humans are HOOKED. Machines are LEARNING.</p><p>Go for it! And I will form a good habit from then on.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; Humans are HOOKED. Machines are LEARNING.&lt;/p&gt;
&lt;p&gt;Go for it! And I will form a good habit from then on.&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
</feed>
